[build-system]
requires = ["setuptools>=42", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "fca-dashboard"
version = "0.1.0"
description = "ETL Pipeline for FCA Dashboard"
readme = "README.md"
requires-python = ">=3.9"
license = {text = "Proprietary"}
authors = [
    {name = "ETL Team"}
]

[tool.black]
line-length = 120
target-version = ['py39']
include = '\.pyi?$'

[tool.isort]
profile = "black"
line_length = 120
multi_line_output = 3

[tool.flake8]
max-line-length = 120
extend-ignore = "E203"
exclude = [".git", "__pycache__", "build", "dist", "alembic", "venv", ".venv", "env", ".env", ".venv/Lib/", ".venv\\Lib\\", "./.venv/Lib/", ".\\.venv\\Lib\\"]

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true

[tool.pytest.ini_options]
testpaths = ["fca_dashboard/tests"]
python_files = "test_*.py"
python_classes = "Test*"
python_functions = "test_*"
addopts = "--cov=fca_dashboard --cov-report=html --cov-report=term"

[tool.coverage.run]
source = ["fca_dashboard"]
omit = [
    "*/tests/*",
    "*/alembic/*",
    "*/__pycache__/*",
    "*/migrations/*",
    "*/venv/*",
    "*/.venv/*",
    "*/examples/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "pass",
    "raise ImportError",
]

[tool.ruff]
# Enable Pyflakes ('F'), pycodestyle ('E'), and isort ('I') codes by default.
select = ["E", "F", "I", "N", "B", "C4", "SIM", "ERA"]
ignore = []

# Allow autofix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]
unfixable = []

# Exclude a variety of commonly ignored directories.
exclude = [
    ".git",
    ".mypy_cache",
    ".ruff_cache",
    ".venv",
    "__pycache__",
    "build",
    "dist",
    "fca_dashboard/examples",
]

# Same as Black.
line-length = 120

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

# Assume Python 3.9
target-version = "py39"

[tool.ruff.mccabe]
# Unlike Flake8, default to a complexity level of 10.
max-complexity = 10

[tool.ruff.isort]
known-first-party = ["fca_dashboard"]