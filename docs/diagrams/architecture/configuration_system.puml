@startuml "NexusML Configuration System"

' Define styles
skinparam backgroundColor white
skinparam classAttributeIconSize 0
skinparam defaultFontName Arial
skinparam defaultFontSize 12
skinparam roundCorner 8
skinparam classBorderColor #666666

' Define configuration classes
class NexusMLConfig {
  +feature_engineering: FeatureEngineeringConfig
  +classification: ClassificationConfig
  +data: DataConfig
  +reference: ReferenceConfig
  +equipment_attributes: Dict[str, EquipmentAttribute]
  +masterformat_primary: MasterFormatMapping
  +masterformat_equipment: EquipmentMasterFormatMapping
  +from_yaml(file_path): NexusMLConfig
  +to_yaml(file_path): None
  +from_env(): NexusMLConfig
  +default_config_path(): Path
}

class FeatureEngineeringConfig {
  +text_combinations: List[TextCombination]
  +numeric_columns: List[NumericColumn]
  +hierarchies: List[Hierarchy]
  +column_mappings: List[ColumnMapping]
  +classification_systems: List[ClassificationSystem]
  +direct_mappings: List[ColumnMapping]
  +eav_integration: EAVIntegration
}

class ClassificationConfig {
  +classification_targets: List[ClassificationTarget]
  +input_field_mappings: List[InputFieldMapping]
}

class DataConfig {
  +required_columns: List[RequiredColumn]
  +training_data: TrainingDataConfig
}

class ReferenceConfig {
  +paths: PathConfig
  +file_patterns: FilePatternConfig
  +column_mappings: ReferenceColumnMappings
  +hierarchies: HierarchiesConfig
  +defaults: DefaultsConfig
}

' Define configuration provider
class ConfigurationProvider {
  -_instance: ConfigurationProvider
  -_config: NexusMLConfig
  +config: NexusMLConfig
  -_load_config(): NexusMLConfig
  +reload(): None
  +set_config(config): None
  +set_config_from_file(file_path): None
  +reset(): None
}

' Define configuration loading process
note right of ConfigurationProvider
  Configuration Loading Process:
  1. Check NEXUSML_CONFIG environment variable
  2. If set, load configuration from that path
  3. If not set, try default path (nexusml/config/nexusml_config.yml)
  4. If default path exists, load configuration from there
  5. If not, raise FileNotFoundError
end note

' Define relationships
ConfigurationProvider --> NexusMLConfig : provides
NexusMLConfig *-- FeatureEngineeringConfig
NexusMLConfig *-- ClassificationConfig
NexusMLConfig *-- DataConfig
NexusMLConfig *-- ReferenceConfig

' Define usage example
note bottom of ConfigurationProvider
  Usage Example:
  ```python
  # Get configuration
  config_provider = ConfigurationProvider()
  config = config_provider.config
  
  # Access configuration values
  feature_config = config.feature_engineering
  data_config = config.data
  ```
end note

@enduml